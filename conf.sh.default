#!/usr/bin/env bash

# settings for docker build, run and exec

main() {
    SCRIPTDIR=$(cd $(dirname $BASH_SOURCE[0]) && pwd)
    source $SCRIPTDIR/dscripts/conf_lib.sh  # load library functions

    init_sudo
    set_volume_root
    set_image_and_container_name
    set_users
    set_buildargs
    set_run_args
    set_network
    set_vol_mapping
    #enable_x11_client
    #enable_pkcs11
    #set_enable_sshd     # usually used only for debugging - requires installed sshd in image
}


set_volume_root() {
    DOCKERVOL_SHORT='/dv'
    DOCKERLOG_SHORT='/dl'
    if [ "$TRAVIS" == "true" ]; then
        DOCKERVOL_SHORT='./dv';
        DOCKERLOG_SHORT='./dl';
    fi
    DOCKER_VOLUME_ROOT='/var/lib/docker/volumes'  # hard coded - check for your config if applicable!
}


set_image_and_container_name() {
    # This IMGID qualifies image, container, user and IP adddress; this is helpful for managing
    # processes on the docker host etc.
    IMGID='05'  # range from 02 .. 99; must be unique per node
    PROJSHORT='shibsp'  # lowercase!
    export IMAGENAME="r2h2/$PROJSHORT${IMGID}"
    export CONTAINERNAME="${IMGID}$PROJSHORT"
}


set_users() {
    export SHIBDUSER="shibd${IMGID}"
    export SHIBDUID="3430${IMGID}"
    export HTTPDUSER="httpd${IMGID}"
    export HTTPDUID="3440${IMGID}"
    export START_AS_ROOT='True'      # 'True' e.g. for apache to fall back to www user
}


set_buildargs() {
    export BUILDARGS="
        --build-arg SHIBDUSER=$SHIBDUSER
        --build-arg SHIBDUID=$SHIBDUID
        --build-arg HTTPDUSER=$HTTPDUSER
        --build-arg HTTPDUID=$HTTPDUID
    "
}


set_run_args() {
    export ENVSETTINGS="
        -e SHIBDUSER=$SHIBDUSER
        -e HTTPDUSER=$HTTPDUSER
    "
    get_capabilities
    export STARTCMD='/start.sh'  # unset or blank to use image default
}


set_network() {
    # The docker0 bridge has dynamic addresses, whereas a custom bridge allows predictable addresses
    NETWORK=dockernet
    set +e  # errexit off
    $sudo docker network ls | awk '{print $2}' | grep $NETWORK > /dev/null
    if (( $? == 1)); then
        $sudo docker network create --driver bridge --subnet=10.1.1.0/24 \
                  -o com.docker.network.bridge.name=br-$NETWORK $NETWORK
    fi
    export NETWORKSETTINGS="
        --net $NETWORK
        --ip 10.1.1.${IMGID}
    "
}


set_vol_mapping() {
    export VOLLIST=''
    export VOLMAPPING=''
    create_user $SHIBDUSER $SHIBDUID
    create_user $HTTPDUSER $HTTPDUID

    map_docker_volume "${CONTAINERNAME}.etc_httpd_conf" '/etc/httpd/conf' 'Z' $DOCKERVOL_SHORT
    map_docker_volume "${CONTAINERNAME}.etc_httpd_conf.d" '/etc/httpd/conf.d' 'Z' $DOCKERVOL_SHORT
    map_docker_volume "${CONTAINERNAME}.etc_shibboleth" '/etc/shibboleth' 'Z' $DOCKERVOL_SHORT
    map_docker_volume "${CONTAINERNAME}.etc_shibboleth-ds" '/etc/shibboleth-ds' 'Z' $DOCKERVOL_SHORT
    map_docker_volume '03pyff.var_md_feed' '/opt/md_feed' 'ro' $DOCKERVOL_SHORT
    map_docker_volume "${CONTAINERNAME}.var_log" '/var/log' 'Z' $DOCKERLOG_SHORT
    map_docker_volume "${CONTAINERNAME}.var_www" '/var/www' 'Z' $DOCKERVOL_SHORT
    #map_docker_volume "${CONTAINERNAME}.var_cache" '/var/cache' 'Z' $DOCKERLOG_SHORT  # provide this for faster startup - otherwise a new container might have to fetch metadata first

	$sudo chown -R $HTTPDUSER:$HTTPDUSER $DOCKER_VOLUME_ROOT/$CONTAINERNAME.etc_httpd_conf*
	$sudo chown -R $SHIBDUSER:$SHIBDUSER $DOCKER_VOLUME_ROOT/$CONTAINERNAME.etc_shibboleth
	$sudo chown -R $HTTPDUSER:$HTTPDUSER $DOCKER_VOLUME_ROOT/$CONTAINERNAME.var_www/
	$sudo chown -R $HTTPDUSER:$HTTPDUSER $DOCKER_VOLUME_ROOT/$CONTAINERNAME.var_log/
	create_chown_dir $DOCKER_VOLUME_ROOT/$CONTAINERNAME.var_log/_data/shibboleth/ $SHIBDUSER $SHIBDUSER
	create_chown_dir $DOCKER_VOLUME_ROOT/$CONTAINERNAME.var_log/_data/startup/ root root

	export LOGFILES="
        tail -f DOCKERLOG_SHORT/${CONTAINERNAME}.var_log/shibboleth/shibd.log
    "
        #tail -f DOCKERLOG_SHORT/${CONTAINERNAME}.var_log/httpd/sp1TestWpvPortalverbundAt_access.log
}


main
